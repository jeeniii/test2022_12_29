package controller;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import domain.MemberVO;
import domain.PagingVO;
import handler.PagingHandler;
import net.coobird.thumbnailator.Thumbnails;
import service.BoardService;
import service.BoardServiceImpl;

@WebServlet("/brd/*")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final Logger log=LoggerFactory.getLogger(BoardController.class);
	private RequestDispatcher rdp;
	private BoardService bsv;
	private String destPage;
	private int isOk;
	private String savePath;
	private final String UTF8="utf-8";
       
    public BoardController() {
    	bsv=new BoardServiceImpl();
    }

	protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		req.setCharacterEncoding("utf-8");
		res.setCharacterEncoding("utf-8");
		res.setContentType("text/html; charset=utf-8");
		
		String uri=req.getRequestURI();
		String path=uri.substring(uri.lastIndexOf("/")+1);
		log.info("uri> :"+uri);
		log.info("path> :"+path);
		
		switch(path) {
		case "register":
			log.info("register1");
			destPage="/board/register.jsp";
			break;
			
		case "insert":
			try {
				savePath=getServletContext().getRealPath("_fileUpload");
				File fileDir=new File(savePath);
				log.info("저장 위치"+savePath);
				
				DiskFileItemFactory fileItemFactory=new DiskFileItemFactory();
				fileItemFactory.setRepository(fileDir);
				fileItemFactory.setSizeThreshold(2*1024*1024);
				
				BoardVO bvo=new BoardVO();
				ServletFileUpload fileUpload=new ServletFileUpload(fileItemFactory); 
				List<FileItem> itemList=fileUpload.parseRequest(req);
				for(FileItem item:itemList) {
					switch(item.getFieldName()) {
					case "title":
						bvo.setTitle(item.getString(UTF8));
						break;
					case "writer":
						bvo.setWriter(item.getString(UTF8));
						break;
					case "content":
						bvo.setContent(item.getString(UTF8));
						break;
					case "image_file":
						if(item.getSize()>0) {
							String fileName=item.getName().substring(item.getName().lastIndexOf("/")+1);
							log.info(fileName);
							fileName=System.currentTimeMillis()+"_"+fileName;
							File uploaFilePath=new File(fileDir+File.separator+fileName);
							log.info("파일 경로+이름: "+uploaFilePath);
							
							try {
								item.write(uploaFilePath);							
								bvo.setImage_file(fileName);
								Thumbnails.of(uploaFilePath).size(100, 100).toFile(new File(fileDir+File.separator+"th_"+fileName));
							} catch (Exception e) {
								log.info("file writer on disk fail");
								e.printStackTrace();
							}
						}
						break;
					}
				}
				isOk=bsv.register(bvo);
				log.info("insert > :"+(isOk>0?"ok":"fail"));
				destPage="pageList";
			} catch (Exception e) {
				log.info("insert error");
				e.printStackTrace();
			}
			break;
		case "list":
			try {
				HttpSession ses=req.getSession();
				MemberVO mvo=(MemberVO)ses.getAttribute("ses");
			} catch (Exception e) {
				// TODO: handle exception
			}
			break;
			
		case "pageList":
			try {
				PagingVO pgvo=new PagingVO();
				int totCount=bsv.getPageCnt();
				List<BoardVO> list=bsv.getListPage(pgvo);
				PagingHandler ph=new PagingHandler(pgvo, totCount);
				req.setAttribute("list", list);
				req.setAttribute("ph", ph);
				destPage="/board/"
			} catch (Exception e) {
				// TODO: handle exception
			}
			
		default:
			break;
		}
		
		rdp=req.getRequestDispatcher(destPage);
		rdp.forward(req, res);
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}
